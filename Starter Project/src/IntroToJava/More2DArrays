package IntroToJava;

public class More2DArrays {
	
	public void nM (int n, int m) {
		int[][]arr = new int [n][m];
		int x = 1;
		for(int i = 0; i<m; i++) {
			for(int j = 0; j <n; j++) {
				arr[j][i]=x;
				x++;
				System.out.print(arr[j][i] + ", ");
			}
			System.out.println();
		}
	}
	
	public void max(double arr[][]) {
		double max = arr[0][0];
		//int column = arr[0].length;
		for(int i = 0; i<arr.length; i++) {
			for(int j = 0; j<arr[0].length;j++) {
				if(arr[i][j]>max) {
					max = arr[i][j];
				}
			}
			
		}
		System.out.println(max);
	}
	
	public void average(double arr[][]) {
		double sum =0;
		for(int i = 0; i<arr.length; i++) {
			for(int j = 0; j<arr[0].length;j++) {
				sum+=arr[i][j];
			}
		}
		System.out.print(sum/(arr.length*arr[0].length));
	}
	
	public void sumArray(double arr[][]) {
		System.out.println();
		double arr2[] = new double[arr.length];
		for(int i = 0; i<arr.length; i++) {
			double sum = 0;
			for(int j = 0; j<arr[0].length;j++) {
				sum+=arr[i][j];
			}
			arr2[i]=sum;
		}
		for(int i = 0; i<arr2.length;i++) {
			System.out.print(arr2[i]+", ");
		}
	}
	
	public void magicMatrix(int arr[][]) {
		int sumTarget = 0;
		boolean yes = true;
		for(int i =0; i<arr[0].length;i++) {
			sumTarget+=arr[0][i];
		}

		for(int i = 0; i<arr.length; i++) {
			int sum =0;
			for(int j = 0; j<arr[0].length;j++) {
				sum+=arr[i][j];
			}
			if(sum!=sumTarget) {
				yes = false;
			}
		}

		int sumDiagonal1 = 0;
		for(int i = 0; i<arr.length; i++) {
			sumDiagonal1+=arr[i][i];
		}
		if(sumDiagonal1!=sumTarget) {
			yes = false;
		}
		
		int sumDiagonal2 = 0;
		for(int i = 0; i<arr.length;i++) {
			sumDiagonal2 += arr[arr[0].length-1-i][i];
		}
		if(sumDiagonal2!=sumTarget) {
			yes = false;
		}
		
		System.out.println();
		if(yes) {
			System.out.println("This is a magic matrix");
		}
		else {
			System.out.println("This is not a magic matrix");
		}
		
	}
	
	
	
	public static void main(String[] args) {
		More2DArrays runner = new More2DArrays();
		runner.nM(3,4);
		runner.max(new double[][] {{1,3.3,-4,5},{4,5.2,5.67,6.1}});
		runner.average(new double[][] {{1,3.3,-4,5},{4,5.2,5.67,6.1}});
		runner.sumArray(new double[][] {{1,3.3,-4,5},{4,5.2,5.67,6.1}});
		runner.magicMatrix(new int[][] {{2,9,4},{7,5,3},{6,1,8}});
	}

}
